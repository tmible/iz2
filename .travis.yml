dist:     trusty    # используем Ubuntu 14.04 Trusty Tahr (а не 12.02 Precise Pangolin)
sudo:     required  # используем Virtual Machine (а не Docker container)

language: c         # на практике разницы между специфичным для C++ окружением
                    # и, скажем, python -- никакой. Но пусть будет cpp.

os:
    # будем прогонять CI и на Linux, и на Mac OS X...
    - linux
    - osx

compiler:
    # ... и с помощью GCC, и Clang
    - gcc
    - clang

env:
    # список переменных окружения, влияющих на матрицу сборки:
    - TARGET_CPU=amd64 BUILD_CONFIGURATION=Debug
    - TARGET_CPU=amd64 BUILD_CONFIGURATION=Release
    - TARGET_CPU=x86 BUILD_CONFIGURATION=Debug
    - TARGET_CPU=x86 BUILD_CONFIGURATION=Release

matrix:
    exclude:
        # вручную исключим ненужные элементы из матрицы сборки:
        - os:       osx
          compiler: gcc

        - os:  osx
          env: TARGET_CPU=x86 BUILD_CONFIGURATION=Debug

        - os:  osx
          env: TARGET_CPU=x86 BUILD_CONFIGURATION=Release

install:
    # скрипт настройки среды и установки зависимостей:
    - sudo apt-get -qq update
    - sudo apt-get install -y libgtest-dev valgrind cmake
    - sudo wget https://github.com/google/googletest/archive/release-1.7.0.tar.gz
    - sudo tar xf release-1.7.0.tar.gz
    - cd googletest-release-1.7.0
    - sudo cmake -DBUILD_SHARED_LIBS=ON .
    - sudo make
    - sudo cp -a include/gtest /usr/include
    - sudo cp -a libgtest_main.so libgtest.so /usr/lib/
    - which valgrind
    - cd "${TRAVIS_BUILD_DIR}"

script:
    # скрипт сборки и тестирования проекта:
    - cmake CMakeLists.txt
    - make
    - ./run_tests
    - ./iz2
    - valgrind --tool=memcheck --leak-check=full --leak-resolution=med  --track-origins=yes ./iz2

deploy:
    # выкладываем tagged-коммиты на GitHub Releases:
    provider:     releases
    file:         <package-file>
    skip_cleanup: true
    overwrite:    true

    api_key:
        secure:   <encrypted-github-token>

    on:
        tags:     true
